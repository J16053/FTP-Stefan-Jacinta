Test Cases
---
For a list of current known issues, see the Issues tab on Github.

These cases were tested by running the FTPserver and the FTPclient locally and sending commands that we both expected to work and not work from the client to the server. The commands were also tested while multiple clients were connected, although not all possible combinations of commands across different clients were tested. Client and server disconnects were also tested by shutting down the client or server processes mid-communication, but it was difficult to test client/server disconnect during the transmission of a command or file because those times were quite short (file transfer was only tested with relatively small (<1 MB) files).

- USER username
  Currently, the server holds 4 users: STEFAN, JACINTA, YASIR, and THOMAS.
  These users were used to verify the correct function of the status change
  of the user. By default, once a client connects, it does not have an associated 
  user field and has status 1 i.e., connected. When a correct username is 
  sent to the server, the status is changed to 2 (i.e., username OK). Once 
  a correct password is provided through the 'PASS password' command, the status
  is changed to 3 (logged in). Then and only then will the user be able to perform
  any of the FTP / system commands to retrieve information from the server. 
 
	- USER valid_username
	[x] Server responds with "331 Username OK, need password"
	- USER invalid_username
	[x] Server responds with "430 Invalid username"
	- USER (no_username)
	[x] Request not sent to server, display "Please input username."  

- PASS password
  Each of the 4 aforementioned users have a corresponding password:
    JACINTA has password AWESOME.
    STEFAN has password SUPER.
    YASIR has password ZAKI.
    THOMAS has password POTSCH.
  Once authenticated, the client can become un-authenticated only if a new valid
  user name is provided. If the user is logged in and an incorrect user name is
  provided, the previously authenticated user will remain logged in.
    
	- PASS valid_password (username OK)
	[x] Server responds with "230 User logged in, proceed", user is logged in
	- PASS invalid_password (username OK)
	[x] Server responds with "430 Incorrect password"
	- PASS valid_password (logged in)
	[x] Server responds with "431 User already logged in"
	- PASS invalid_password (logged in)
	[x] Server responds with "431 User already logged in"
	- PASS (no_password)
	[x] Request not sent to server, display "Please input password."
	- PASS password (username not OK)
	[x] Server responds with "530 User authentication is pending"

- PUT file
	Because the server and the client are often being run on the same machine during testing, be careful not to PUT a file to the same directory you are currently in: this may overwrite your original file.
	- PUT valid_file (username not OK)
  [x] Client responds "Timeout on data socket connection"
	[x] Server responds with "530 User authentication is pending"
	- PUT valid_file (not authenticated)
  [x] Client responds "Timeout on data socket connection"
	[x] Server responds with "530 Password authentication is pending"
	- PUT valid_file (authenticated)
	[x] File is sent to server and placed in server current directory: any existing file with the same name is overwritten
	- PUT invalid_file 
	[x] Request not sent to server, error message displayed

- GET file
	- GET file (not logged in)
  [x] Client responds "Timeout on data socket connection"
	[x] Server responds with "530 User authentication is pending"
	- GET file (not authenticated)
  [x] Client responds "Timeout on data socket connection"
	[x] Server responds with "530 Password authentication is pending"
	- GET valid_file
	[x] File is retrieved from server and placed in client current directory: any existing file with the same name is overwritten
	- GET invalid_file
	[x] Server responds with error

- PWD
	- PWD (not logged in)
	[x] Server responds with "530 Authentication pending"
	- PWD
	[x] Prints working directory of server
	- PWD arg
	[x] Prints working directory of server

- !PWD
	- !PWD (not logged in)
	[x] Prints working directory of client
	- !PWD
	[x] Prints working directory of client

- LS
	- LS (not logged in)
	[x] Server responds with "530 Authentication pending"
	- LS
	[x] Lists contents of server's current working directory
	- LS arg
	[x] Lists contents of server's current working directory

- !LS
	- !LS (not logged in)
	[x] Lists contents of client's current working directory
	- !LS
	[x] Lists contents of client's current working directory
	- !LS arg
	[x] Lists contents of client's current working directory

- CD
	- CD valid_directory (not logged in)
	[x] Server responds with "530 Authentication pending"
	- CD valid_directory
	[x] Server responds with "250 Changed directory", server's current working directory is changed to valid_directory
	- CD invalid_directory
	[x] Server responds with error

- !CD
	- !CD valid_directory (not logged in)
	[x] Changes client directory to valid_directory
	- CD valid_directory
	[x] Changes client directory to valid_directory
	- CD invalid_directory
	[x] Prints error message
